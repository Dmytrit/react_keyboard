{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","pressedKey","keyListener","event","key","setState","document","addEventListener","this","removeEventListener","className","Component","ReactDOM","render","getElementById"],"mappings":"2MAMaA,EAAb,4MACEC,MAAQ,CACNC,WAAY,IAFhB,EAaEC,YAAc,SAACC,GACK,MAAdA,EAAMC,IACR,EAAKC,SAAS,CAAEJ,WAAY,KAE5B,EAAKI,SAAS,CAAEJ,WAAYE,EAAMC,OAjBxC,uDAKE,WACEE,SAASC,iBAAiB,QAASC,KAAKN,eAN5C,kCASE,WACEI,SAASG,oBAAoB,QAASD,KAAKN,eAV/C,oBAqBE,WACE,IAAQD,EAAeO,KAAKR,MAApBC,WAER,OACE,qBAAKS,UAAU,MAAf,SACGT,EACG,8DAA+BA,KAC/B,8DA5BZ,GAAyBU,a,MCDzBC,IAASC,OACP,cAAC,EAAD,IACAP,SAASQ,eAAe,W","file":"static/js/main.a800f3e0.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype State = {\n  pressedKey: string,\n};\n\nexport class App extends Component<{}, State> {\n  state = {\n    pressedKey: '',\n  };\n\n  componentDidMount() {\n    document.addEventListener('keyup', this.keyListener);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keyup', this.keyListener);\n  }\n\n  keyListener = (event: KeyboardEvent) => {\n    if (event.key === ' ') {\n      this.setState({ pressedKey: '' });\n    } else {\n      this.setState({ pressedKey: event.key });\n    }\n  };\n\n  render() {\n    const { pressedKey } = this.state;\n\n    return (\n      <div className=\"App\">\n        {pressedKey\n          ? <p>{`The last pressed key is ${pressedKey}`}</p>\n          : <p>Nothing was pressed yet</p>}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}